@using Data
@using Components
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

@page "/search"

<div class="container">
    @if (getItemsError)
    {
        <p>Unable to get items.</p>
    }
    else
    {
        <ul>
            @foreach (var item in items)
            {
                <Pindex.Components.ItemCard Item=@item/>
            }
        </ul>
    }
</div>

@code {
    private bool getItemsError;
    private bool shouldRender;
    IEnumerable<Item> items = Array.Empty<Item>();

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        var request = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7003/api/item");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode) {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            items = await JsonSerializer.DeserializeAsync<IEnumerable<Item>>(responseStream);
        } else {
            getItemsError = true;
        }

        shouldRender = true;

    }
}